# Using mainly code and icons from Map Modes GUI mod: https://steamcommunity.com/sharedfiles/filedetails/?id=2552358382
types MapModes
{
	type map_modes_debug = flowcontainer {
		ignoreinvisible = yes

		button_round  = {
			visible = "[And( Not(IsGameViewOpen('barbershop')), CanChangeMapMode )]"
			name = "map_mode_simple_realms_button"
			onclick = "[SetMapMode('simple_realms')]"
			raw_text = "Srlm"
			tooltip = "MAPMODE_REALMS"
		}

		button_round  = {
			visible = "[And( Not(IsGameViewOpen('barbershop')), CanChangeMapMode )]"
			name = "map_mode_terrain_button"
			onclick = "[SetMapMode('terrain')]"
			raw_text = "Ter"
			tooltip = "MAPMODE_TERRAIN"
		}

		button_round  = {
			visible = "[And( Not(IsGameViewOpen('barbershop')), CanChangeMapMode )]"
			name = "map_mode_baronies_button"
			onclick = "[SetMapMode('baronies')]"
			raw_text = "Bar"
			tooltip = "MAPMODE_BARONIES"
		}

		button_round  = {
			visible = "[And( Not(IsGameViewOpen('barbershop')), CanChangeMapMode )]"
			name = "map_mode_realm_areas_button"
			onclick = "[SetMapMode('realm_areas')]"
			raw_text = "Area"
			tooltip = "MAPMODE_AREAS"
		}

		button_round  = {
			visible = "[And( Not(IsGameViewOpen('barbershop')), CanChangeMapMode )]"
			name = "map_mode_diplomacy_button"
			onclick = "[SetMapMode('diplomacy')]"
			raw_text = "Diplo"
			tooltip = "MAPMODE_DIPLOMACY"
		}

		button_round  = {
			visible = "[And( Not(IsGameViewOpen('barbershop')), CanChangeMapMode )]"
			onclick = "[SetMapMode('debug_character_pools')]"
			raw_text = "Pools"
			raw_tooltip = "Character Pools"
		}

		button_round  = {
			visible = "[And( Not(IsGameViewOpen('barbershop')), CanChangeMapMode )]"
			onclick = "[SetMapMode('debug_ai_war_coordinator_targets')]"
			raw_text = "AI"
			raw_tooltip = "AI War Coordinator targets"
		}

		button_round  = {
			visible = "[And( Not(IsGameViewOpen('barbershop')), CanChangeMapMode )]"
			onclick = "[SetMapMode('debug_visual_regions')]"
			raw_text = "Reg"
			raw_tooltip = "Visual Geographical Regions"
		}
	}

	type map_modes = widget {
		allow_outside = yes
		filter_mouse = all
		alwaystransparent = yes

		size = { 222 107 }

		background = {
			using = Background_Area_Dark
			margin_left = 5
			margin_bottom = 15
			margin_top = 10
			margin_right = 10
			color = { 0.15 0.15 0.15 0.75 }
		}

		# flowcontainer = {
		# 	visible = "[And( And( Not( GetVariableSystem.Exists( 'mapmodes_expand' ) ), IsMapMode('realms') ), IsDefaultGUIMode )]"
		# 	parentanchor = top|right
		# 	position = { 0 -40 }
		# 	direction = vertical
		# 	ignoreinvisible = yes
		# 	min_width = 170
		# 	tooltip = "ZOOM_LEVEL_PAPER_MAP_TOOLTIP"

		# 	state = {
		# 		name = _show
		# 		using = Animation_FadeIn_Standard
		# 	}

		# 	state = {
		# 		name = _hide
		# 		using = Animation_FadeOut_Standard
		# 	}

		# 	background = {
		# 		using = Background_Area_Dark
		# 		margin = { 10 10 }
		# 		margin_top = 5
		# 		color = { 0.15 0.15 0.15 0.75 }
		# 	}

		# 	text_single = {
		# 		visible = "[GreaterThanOrEqualTo_int32(GetZoomLevel, '(int32)20')]"
		# 		parentanchor = hcenter
		# 		text = "ZOOM_LEVEL_PAPER_MAP"
		# 		default_format = "#high;italic"
		# 	}

		# 	text_single = {
		# 		visible = "[GreaterThanOrEqualTo_int32(GetZoomLevel, '(int32)20')]"
		# 		parentanchor = hcenter
		# 		text = "ZOOM_LEVEL_SELECTING_REALMS"
		# 	}
		# }

		# flowcontainer = {
		# 	visible = "[And( And( Not( GetVariableSystem.Exists( 'mapmodes_expand' ) ), IsMapMode('realms') ), IsDefaultGUIMode )]"
		# 	parentanchor = top|right
		# 	position = { 0 -40 }
		# 	direction = vertical
		# 	ignoreinvisible = yes
		# 	min_width = 170
		# 	tooltip = ZOOM_LEVEL_POLITICAL_TOOLTIP

		# 	state = {
		# 		name = _show
		# 		using = Animation_FadeIn_Standard
		# 	}

		# 	state = {
		# 		name = _hide
		# 		using = Animation_FadeOut_Standard
		# 	}

		# 	background = {
		# 		using = Background_Area_Dark
		# 		margin = { 10 10 }
		# 		margin_top = 5
		# 		color = { 0.15 0.15 0.15 0.75 }
		# 	}

		# 	text_single = {
		# 		visible = "[And(LessThan_int32(GetZoomLevel, '(int32)20'), GreaterThan_int32(GetZoomLevel, '(int32)8'))]"
		# 		parentanchor = hcenter
		# 		text = "ZOOM_LEVEL_POLITICAL"
		# 		default_format = "#color_yellow"
		# 	}

		# 	text_single = {
		# 		visible = "[And(LessThan_int32(GetZoomLevel, '(int32)20'), GreaterThan_int32(GetZoomLevel, '(int32)8'))]"
		# 		parentanchor = hcenter
		# 		text = "ZOOM_LEVEL_SELECTING_REALMS"
		# 	}
		# }

		# flowcontainer = {
		# 	visible = "[And( And(Not(GetVariableSystem.Exists( 'mapmodes_expand' )), IsMapMode('realms')), IsDefaultGUIMode )]"
		# 	parentanchor = top|right
		# 	position = { 0 -40 }
		# 	direction = vertical
		# 	ignoreinvisible = yes
		# 	min_width = 170
		# 	tooltip = ZOOM_LEVEL_DETAILS_TOOLTIP

		# 	state = {
		# 		name = _show
		# 		using = Animation_FadeIn_Standard
		# 	}

		# 	state = {
		# 		name = _hide
		# 		using = Animation_FadeOut_Standard
		# 	}

		# 	background = {
		# 		using = Background_Area_Dark
		# 		margin = { 10 10 }
		# 		margin_top = 5
		# 		color = { 0.15 0.15 0.15 0.75 }
		# 	}

		# 	text_single = {
		# 		visible = "[LessThan_int32(GetZoomLevel, '(int32)9')]"
		# 		parentanchor = hcenter
		# 		text = "ZOOM_LEVEL_DETAILS"
		# 		default_format = "#color_green"
		# 	}

		# 	text_single = {
		# 		visible = "[LessThan_int32(GetZoomLevel, '(int32)9')]"
		# 		parentanchor = hcenter
		# 		text = "ZOOM_LEVEL_SELECTING_BARONIES"
		# 	}
		# }

		flowcontainer = {
			parentanchor = right|bottom
			margin_right = 15
			direction = vertical

			## De Jure
			flowcontainer = {
				visible = "[CanChangeMapMode]"
				parentanchor = hcenter
				direction = horizontal
				ignoreinvisible = yes
				spacing = -3

				icon_button_mapmode = {
					name = "map_mode_realms_button"
					size = { 36 36 }

					blockoverride 'mm_datacontext'
					{
						datacontext = "[GetMapMode('realms')]"
					}

					blockoverride "mm_button"
					{
						shortcut = "map_mode_1"
					}

					blockoverride "button_bg_color"
					{
						color = { 0.1 0.14 0.1 1 }
					}
				}
				
				icon_button_mapmode = {
					name = "map_mode_counties_button"
					size = { 36 36 }

					blockoverride "mm_button"
					{
						onclick = "[SetMapMode('dejure_counties')]"
						down = "[IsMapMode('dejure_counties')]"
						shortcut = "map_mode_6"
						tooltip = "MAPMODE_COUNTY_TITLES_TOOLTIP"
					}
					blockoverride "mm_icon"
					{
						down = "[IsMapMode('dejure_counties')]"
						texture = "gfx/interface/icons/flat_icons/mapmode_county.dds"
					}

					blockoverride "mm_glow"
					{
						visible = "[IsMapMode('dejure_counties')]"
					}
				}

				icon_button_mapmode = {
					name = "map_mode_duchies_button"
					size = { 36 36 }

					blockoverride 'mm_datacontext'
					{
						datacontext = "[GetMapMode('dejure_duchies')]"
					}

					blockoverride "mm_button"
					{
						shortcut = "map_mode_9"
					}

					blockoverride "button_bg_color"
					{
						color = { 0.1 0.14 0.1 1 }
					}
				}

				icon_button_mapmode = {
					name = "map_mode_kingdoms_button"
					size = { 36 36 }

					blockoverride 'mm_datacontext'
					{
						datacontext = "[GetMapMode('dejure_kingdoms')]"
					}

					blockoverride "mm_button"
					{
						shortcut = "map_mode_10"
					}

					blockoverride "button_bg_color"
					{
						color = { 0.18 0.1 0.1 1 }
					}
				}

				icon_button_mapmode = {
					name = "map_mode_empires_button"
					size = { 36 36 }

					blockoverride 'mm_datacontext'
					{
						datacontext = "[GetMapMode('dejure_empires')]"
					}

					blockoverride "mm_button"
					{
						shortcut = "map_mode_11"
					}

					blockoverride "button_bg_color"
					{
						color = { 0.12 0.12 0.18 1 }
					}
				}

				icon_button_mapmode = {
					name = "simple_terrain"
					size = { 36 36 }

					blockoverride "mm_button"
					{
						onclick = "[SetMapMode('simple_terrain')]"
						down = "[IsMapMode('simple_terrain')]"
						shortcut = "map_mode_12"
						tooltip = "MAPMODE_TERRAIN_TOOLTIP"
					}
					blockoverride "mm_icon"
					{
						down = "[IsMapMode('simple_terrain')]"
						texture = "gfx/interface/icons/flat_icons/mapmode_terrain.dds"
					}

					blockoverride "mm_glow"
					{
						visible = "[IsMapMode('simple_terrain')]"
					}
				}

			}

			## Middle Row
			flowcontainer = {
				parentanchor = hcenter
				direction = horizontal
				ignoreinvisible = no
				spacing = -2

				visible = "[CanChangeMapMode]"

				icon_button_mapmode = {
					name = "map_mode_infra_button"
					size = { 36 36 }

					blockoverride "mm_button"
					{
						onclick = "[SetMapMode('infra')]"
						onclick = "[GetScriptedGui('line_infra_map').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
						down = "[And( GetScriptedGui('line_infra_map').IsShown(GuiScope.End), IsMapMode('infra') )]"
						enabled = "[And(Not(IsObserver), GetScriptedGui('line_infra_map').IsValid(GuiScope.End))]"
						tooltip = "MAPMODE_INFRA_TOOLTIP"
					}
					blockoverride "mm_icon"
					{
						down = "[IsMapMode('infra')]"
						texture = "gfx/interface/icons/flat_icons/mapmode_warring.dds"
					}

					blockoverride "mm_glow"
					{
						visible = "[IsMapMode('infra')]"
					}
				}
				
				icon_button_mapmode = {
					name = "map_mode_raiding_button"
					size = { 36 36 }

					blockoverride "mm_button"
					{
						onclick = "[SetMapMode('raiding')]"
						onclick = "[GetScriptedGui('line_raiding_map').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
						down = "[And( GetScriptedGui('line_raiding_map').IsShown(GuiScope.End), IsMapMode('raiding') )]"
						enabled = "[And(Not(IsObserver), GetScriptedGui('line_raiding_map').IsValid(GuiScope.End))]"
						tooltip = "MAPMODE_RAIDING_TOOLTIP"
					}
					blockoverride "mm_icon"
					{
						down = "[IsMapMode('raiding')]"
						texture = "gfx/interface/icons/flat_icons/mapmode_raiding.dds"
					}

					blockoverride "mm_glow"
					{
						visible = "[IsMapMode('raiding')]"
					}
				}

				icon_button_mapmode = {
					name = "map_mode_fortification_button"
					size = { 36 36 }

					blockoverride "mm_button"
					{
						onclick = "[SetMapMode('fortification')]"
						onclick = "[GetScriptedGui('line_fortification_map').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
						down = "[And( GetScriptedGui('line_fortification_map').IsShown(GuiScope.End), IsMapMode('fortification') )]"
						enabled = "[And(Not(IsObserver), GetScriptedGui('line_fortification_map').IsValid(GuiScope.End))]"
						tooltip = "MAPMODE_FORTIFICATION_TOOLTIP"
					}
					blockoverride "mm_icon"
					{
						down = "[IsMapMode('fortification')]"
						texture = "gfx/interface/icons/flat_icons/mapmode_fortification.dds"
					}

					blockoverride "mm_glow"
					{
						visible = "[IsMapMode('fortification')]"
					}
				}
				
				icon_button_mapmode = {
					name = "map_mode_artifact_map_button"
					size = { 36 36 }

					blockoverride "mm_button"
					{
						onclick = "[SetMapMode('artifact')]"
						onclick = "[GetScriptedGui('line_artifact_map').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
						down = "[And( GetScriptedGui('line_artifact_map').IsShown(GuiScope.End), IsMapMode('artifact') )]"
						enabled = "[And(Not(IsObserver), GetScriptedGui('line_artifact_map').IsValid(GuiScope.End))]"
						tooltip = "MAPMODE_ARTIFACT_TOOLTIP"
					}
					blockoverride "mm_icon"
					{
						down = "[IsMapMode('artifact')]"
						texture = "gfx/interface/icons/flat_icons/mapmode_artifact.dds"
					}

					blockoverride "mm_glow"
					{
						visible = "[IsMapMode('artifact')]"
					}
				}

				icon_button_mapmode = {
					name = "map_mode_county_control_button"
					size = { 36 36 }

					blockoverride "mm_button"
					{
						onclick = "[SetMapMode('county_control')]"
						down = "[IsMapMode('county_control')]"
						shortcut = "map_mode_7"
						tooltip = "MAPMODE_COUNTY_CONTROL"
					}
					blockoverride "mm_icon"
					{
						down = "[IsMapMode('county_control')]"
						texture = "gfx/interface/icons/flat_icons/mapmode_county_control.dds"
					}

					blockoverride "mm_glow"
					{
						visible = "[IsMapMode('county_control')]"
					}
				}
				
				icon_button_mapmode = {
					name = "map_mode_weather_button"
					size = { 36 36 }
					#visible = "[GetGlobalVariable('custom_map_mode').IsSet]" ## To-Do:: Use Silk Road's weather map's updates

					blockoverride "mm_button"
					{
						onclick = "[SetMapMode('weather')]"
						onclick = "[GetScriptedGui('line_weather_map').Execute(GuiScope.End)]"
						down = "[And( GetScriptedGui('line_weather_map').IsShown(GuiScope.End), IsMapMode('weather') )]"
						enabled = "[And(Not(IsObserver), GetScriptedGui('line_weather_map').IsValid(GuiScope.End))]"
						tooltip = "MAPMODE_WEATHER_TOOLTIP"
					}
					blockoverride "mm_icon"
					{
						down = "[IsMapMode('weather')]"
						texture = "gfx/interface/icons/flat_icons/mapmode_weather.dds"
					}

					blockoverride "mm_glow"
					{
						visible = "[IsMapMode('weather')]"
					}
				}
			}

			## Lower Row
			flowcontainer = {
				parentanchor = hcenter
				direction = horizontal
				ignoreinvisible = no
				spacing = -2

				visible = "[CanChangeMapMode]"

				icon_button_mapmode = {
					name = "county_development"
					size = { 36 36 }

					blockoverride "mm_button"
					{
						onclick = "[SetMapMode('county_development')]"
						down = "[IsMapMode('county_development')]"
						shortcut = "map_mode_13"
						tooltip = "MAPMODE_DEVELOPMENT_TOOLTIP"
					}
					blockoverride "mm_icon"
					{
						down = "[IsMapMode('county_development')]"
						texture = "gfx/interface/icons/flat_icons/mapmode_population.dds"
					}

					blockoverride "mm_glow"
					{
						visible = "[IsMapMode('county_development')]"
					}
				}

				icon_button_mapmode = {
					name = "economy_buildings"
					size = { 36 36 }

					blockoverride "mm_button"
					{
						onclick = "[SetMapMode('economy_buildings')]"
						down = "[IsMapMode('economy_buildings')]"
						shortcut = "map_mode_14"
						tooltip = "MAPMODE_ECONOMY_BUILDINGS"
					}
					blockoverride "mm_icon"
					{
						down = "[IsMapMode('economy_buildings')]"
						texture = "gfx/interface/icons/flat_icons/mapmode_development.dds"
					}

					blockoverride "mm_glow"
					{
						visible = "[IsMapMode('economy_buildings')]"
					}
				}

				icon_button_mapmode = {
					name = "map_mode_religion_button"
					size = { 36 36 }
					parentanchor = vcenter

					blockoverride 'mm_datacontext'
					{
						datacontext = "[GetMapMode('religions')]"
					}

					blockoverride "mm_button"
					{
						shortcut = "map_mode_3"
					}
				}

				icon_button_mapmode = {
					name = "map_mode_cultures_button"
					size = { 36 36 }
					parentanchor = vcenter

					blockoverride 'mm_datacontext'
					{
						datacontext = "[GetMapMode('cultures')]"
					}

					blockoverride "mm_button"
					{
						shortcut = "map_mode_2"
					}
				}

				icon_button_mapmode = {
					name = "map_mode_court_languages_button"
					size = { 36 36 }

					blockoverride "mm_button"
					{
						onclick = "[SetMapMode('court_languages')]"
						down = "[IsMapMode('court_languages')]"
						shortcut = "map_mode_7"
						tooltip = "MAPMODE_COURT_LANGUAGES"
					}
					blockoverride "mm_icon"
					{
						down = "[IsMapMode('court_languages')]"
						texture = "gfx/interface/icons/flat_icons/mapmode_languages.dds"
					}

					blockoverride "mm_glow"
					{
						visible = "[IsMapMode('court_languages')]"
					}
				}

				widget = {
					parentanchor = vcenter
					size = {32 32}

					button_round = {
						parentanchor = center
						size = { 30 30 }
						onclick = "[GetVariableSystem.Toggle( 'mapmodes_expand' )]"

						button_plus_small = {
							parentanchor = center
							alwaystransparent = yes
						}
					}
				}
			}
		}

		flowcontainer_additional_mapmodes = {
			parentanchor = top|right
			widgetanchor = bottom|right
			position = { 20 21 } 
		}

	} # type map_modes = widget {...}

	type mm_text_button = button_tertiary {
		name = "players"
		block 'datacontext'
		{
			datacontext = "[GetMapMode( 'realms' )]"
		}
		block 'visible'
		{
			visible = "[CanChangeMapMode]"
		}

		parentanchor = hcenter
		size = { 159 25 }

		onclick = "[SetMapMode( MapMode.GetKey )]"
		alwaystransparent = "[IsMapMode( MapMode.GetKey )]"
		
		text = "[MapMode.GetName]"
		tooltip = "[MapMode.GetDesc]"

		using = tooltip_ws

		button_expand = {
			visible = "[IsMapMode( MapMode.GetKey )]"

			size = { 15	15 }
			parentanchor = left|vcenter

			alwaystransparent = yes
		}

		button_expand = {
			visible = "[IsMapMode( MapMode.GetKey )]"
			mirror = horizontal

			size = { 15	15 }
			parentanchor = right|vcenter

			alwaystransparent = yes
		}
	}

	type flowcontainer_additional_mapmodes = flowcontainer {

	visible = "[GetVariableSystem.Exists( 'mapmodes_expand' )]"
	visible_at_creation = no

	margin = { 22 10 }
	alwaystransparent = no
	filter_mouse = all

	state = {
		name = _mouse_hierarchy_leave
		on_finish = "[GetVariableSystem.Toggle( 'mapmodes_expand' )]"
	}

	state = {
		name = _show
		using = Animation_FadeIn_Quick
	}

	state = {
		name = _hide
		using = Animation_FadeOut_Standard
	}

	flowcontainer = {
		direction = vertical
		margin = { 10 10 }
		margin_top = 5
		ignoreinvisible = yes

		background = {
			using = Background_Area_Dark
			color = { 0.15 0.15 0.15 0.75 }
		}

		text_single = {
			parentanchor = hcenter
			text = "ADDITIONAL_MAPMODES"
			default_format = "#medium"
			margin_bottom = 5
			max_width = 130
		}

		block "mapmodes_insert_before"
		{

		}

		flowcontainer = {
			ignoreinvisible = yes
			parentanchor = hcenter

			icon_button_mapmode = {
				name = "map_mode_epidemics_button"
				parentanchor = vcenter
				size = { 32 32 }

				blockoverride 'mm_datacontext'
				{
					datacontext = "[GetMapMode( 'epidemics' )]"
				}

				blockoverride "mm_icon"
				{
					texture = "gfx/interface/icons/flat_icons/map_modes/epidemics.dds"
					size = { 28 28 }
				}

				blockoverride "mm_button"
				{
					shortcut = "map_mode_16"
				}
			}

			icon_button_mapmode = {
				name = "map_mode_legends_button"
				visible = "[And( HasDlcFeature( 'legends' ), CanChangeMapMode )]"
				parentanchor = vcenter
				size = { 32 32 }

				blockoverride 'mm_datacontext'
				{
					datacontext = "[GetMapMode( 'legends' )]"
				}

				blockoverride "mm_icon"
				{
					texture = "gfx/interface/icons/flat_icons/legends.dds"
					size = { 30 30 }
				}

				blockoverride "mm_button"
				{
					shortcut = "map_mode_17"
				}
			}
		}

		widget ={
			size = {0 4}
		}

		divider_light = {
			min_width = 100
			parentanchor = hcenter
		}
		widget ={
			size = {0 4}
		}

		flowcontainer = {
			ignoreinvisible = yes
			parentanchor = hcenter

			icon_button_mapmode = {
				name = "map_mode_counties_button"
				parentanchor = vcenter
				size = { 32 32 }

				blockoverride 'mm_datacontext'
				{
					datacontext = "[GetMapMode( 'dejure_counties' )]"
				}

				blockoverride "mm_icon"
				{
					texture = "gfx/interface/icons/flat_icons/county_crown.dds"
					size = { 20 20 }
				}

				blockoverride "mm_button"
				{
					shortcut = "map_mode_6"
				}
			}

			icon_button_mapmode = {
				name = "map_mode_government_button"
				parentanchor = vcenter
				size = { 32 32 }

				blockoverride 'mm_datacontext'
				{
					datacontext = "[GetMapMode( 'government' )]"
				}

				blockoverride "mm_icon"
				{
					texture = "gfx/interface/icons/flat_icons/government.dds"
					size = { 20 20 }
				}

				blockoverride "mm_button"
				{
					shortcut = "map_mode_5"
				}
			}

			icon_button_mapmode = {
				name = "map_mode_court_languages_button"
				visible = "[And( HasDlcFeature( 'royal_court' ), CanChangeMapMode )]"
				parentanchor = vcenter
				size = { 32 32 }

				blockoverride 'mm_datacontext'
				{
					datacontext = "[GetMapMode('court_languages')]"
				}

				blockoverride "mm_icon"
				{
					texture = "gfx/interface/icons/culture_pillars/language.dds"
					size = { 20 20 }
				}

				blockoverride "mm_button"
				{
					shortcut = "map_mode_7"
				}
			}

			icon_button_mapmode = {
				name = "map_mode_landless_rulers_button"
				visible = "[And( HasDlcFeature( 'landless_playable' ), CanChangeMapMode )]"
				parentanchor = vcenter
				size = { 32 32 }

				blockoverride 'mm_datacontext'
				{
					datacontext = "[GetMapMode( 'landless_rulers' )]"
				}

				blockoverride "mm_icon"
				{
					texture = "gfx/interface/icons/flat_icons/adventurer.dds"
					size = { 20 20 }
				}

				blockoverride "mm_button"
				{
					shortcut = "map_mode_18"
				}
			}

			icon_button_mapmode = {
				name = "players"
				visible = "[And( Or(GameHasMultiplePlayers, InDebugMode), CanChangeMapMode)]"
				parentanchor = vcenter
				size = { 32 32 }

				blockoverride 'mm_datacontext'
				{
					datacontext = "[GetMapMode( 'players' )]"
				}

				blockoverride "mm_icon"
				{
					texture = "gfx/interface/icons/flat_icons/map_modes/players.dds"
					size = { 26 26 }
				}

				blockoverride "mm_button"
				{
					shortcut = "map_mode_8"
				}
			}
		}

		widget ={
			size = {0 4}
		}

		divider_light = {
			min_width = 100
			parentanchor = hcenter
		}
		widget ={
			size = {0 4}
		}

		flowcontainer = {
			ignoreinvisible = yes
			parentanchor = hcenter

			icon_button_mapmode = {
				name = "economy_buildings"
				parentanchor = vcenter
				size = { 32 32 }

				blockoverride 'mm_datacontext'
				{
					datacontext = "[GetMapMode( 'economy_buildings' )]"
				}

				blockoverride "mm_icon"
				{
					texture = "gfx/interface/icons/flat_icons/economy.dds"
					size = { 20 20 }
				}

				blockoverride "mm_button"
				{
					shortcut = "map_mode_14"
				}
			}

			icon_button_mapmode = {
				name = "county_development"
				parentanchor = vcenter
				size = { 32 32 }

				blockoverride 'mm_datacontext'
				{
					datacontext = "[GetMapMode( 'county_development' )]"
				}

				blockoverride "mm_icon"
				{
					texture = "gfx/interface/icons/flat_icons/development.dds"
					size = { 20 20 }
				}

				blockoverride "mm_button"
				{
					shortcut = "map_mode_13"
				}
			}

			icon_button_mapmode = {
				name = "county_control"
				parentanchor = vcenter
				size = { 32 32 }

				blockoverride 'mm_datacontext'
				{
					datacontext = "[GetMapMode( 'county_control' )]"
				}

				blockoverride "mm_icon"
				{
					texture = "gfx/interface/icons/flat_icons/county_control.dds"
					size = { 22 22 }
				}

				blockoverride "mm_button"
				{
					shortcut = "map_mode_15"
				}
			}

			icon_button_mapmode = {
				name = "simple_terrain"
				parentanchor = vcenter
				size = { 32 32 }

				blockoverride 'mm_datacontext'
				{
					datacontext = "[GetMapMode( 'simple_terrain' )]"
				}

				blockoverride "mm_icon"
				{
					texture = "gfx/interface/icons/flat_icons/terrain.dds"
					size = { 20 20 }
				}

				blockoverride "mm_button"
				{
					shortcut = "map_mode_12"
				}
			}
		}

		text_single = {
			parentanchor = hcenter
			text = "ADDITIONAL_MAP_SETTINGS"
			default_format = "#medium"
			margin_bottom = 5
			max_width = 130
		}

		flowcontainer = {
			direction = vertical
			margin = { 5 5 }
			ignoreinvisible = yes

			background = {
				using = Background_Area_Dark
			}

			min_width = 159

			button_checkbox_label = {
				onclick = "[ToggleShowEpidemicMapGraphics]"
				tooltip = "SETTING_SHOW_EPIDEMIC_MAP_GRAPHICS_TOOLTIP"

				state = {
					name = _show
					using = Animation_FadeIn_Standard
				}

				state = {
					name = _hide
					using = Animation_FadeOut_Standard
				}

				blockoverride "checkbox"
				{
					checked = "[ShowEpidemicMapGraphics]"
					size = { 20 20 }
				}

				blockoverride "text"
				{
					text = "SETTING_SHOW_EPIDEMIC_MAP_GRAPHICS"
					min_width = 120
					max_width = 125
					fontsize = 14
					max_height = 18
				}
			}

			button_checkbox_label = {
				onclick = "[ToggleShowLegendMapGraphics]"
				tooltip = "SETTING_SHOW_LEGEND_MAP_GRAPHICS_TOOLTIP"
				visible = "[HasDlcFeature( 'legends' )]"

				state = {
					name = _show
					using = Animation_FadeIn_Standard
				}

				state = {
					name = _hide
					using = Animation_FadeOut_Standard
				}

				blockoverride "checkbox"
				{
					checked = "[ShowLegendMapGraphics]"
					size = { 20 20 }
				}

				blockoverride "text"
				{
					text = "SETTING_SHOW_LEGEND_MAP_GRAPHICS"
					min_width = 120
					max_width = 125
					fontsize = 14
					max_height = 18
				}
			}
		}
	}
}

	type mini_map_mode = widget {
		allow_outside = yes
		filter_mouse = all
		alwaystransparent = yes

		size = { 320 60 }

		background = {
			using = Background_Area_Dark
			margin = { 10 0 }
			color = { 0.15 0.15 0.15 0.75 }
		}

		hbox = {
			vbox = {
				layoutpolicy_horizontal = expanding
				text_single = {
					text = MAP_MODE
				}
				text_single = {
					text = "[GetCurrentMapMode.GetName]"
					default_format = "#high"
				}
			}

			expand = {}

			icon_button_mapmode = {
				blockoverride 'mm_datacontext'
				{
					datacontext = "[GetMapMode( 'struggle' )]"
				}
			}

			icon_button_mapmode = {
				blockoverride 'mm_datacontext'
				{
					datacontext = "[GetMapMode( 'realms' )]"
				}
			}

			icon_button_mapmode = {
				blockoverride 'mm_datacontext'
				{
					datacontext = "[GetMapMode( 'religions' )]"
				}
			}

			icon_button_mapmode = {
				blockoverride 'mm_datacontext'
				{
					datacontext = "[GetMapMode( 'cultures' )]"
				}
			}

			widget = {
				size = {32 32}

				button_round = {
					size = { 30 30 }
					parentanchor = top|hcenter
					widgetanchor = center
					position = { 0 10 }

					onclick = "[GetVariableSystem.Toggle( 'mapmodes_expand' )]"

					button_plus_small = {
						parentanchor = center
						alwaystransparent = yes
					}
				}
			}
		}

		flowcontainer_additional_mapmodes = {
			parentanchor = top|right
			widgetanchor = bottom|right
			position = { 31 10 } 

			blockoverride "mapmodes_insert_before"
			{
				mm_text_button = {
					name = "map_mode_dejure_duchies_button"
					blockoverride 'datacontext'
					{
						datacontext = "[GetMapMode( 'dejure_duchies' )]"
					}
					shortcut = "map_mode_9"
				}

				mm_text_button = {
					name = "map_mode_dejure_kingdoms_button"
					blockoverride 'datacontext'
					{
						datacontext = "[GetMapMode( 'dejure_kingdoms' )]"
					}
					shortcut = "map_mode_10"
				}

				mm_text_button = {
					name = "map_mode_dejure_empires_button"
					blockoverride 'datacontext'
					{
						datacontext = "[GetMapMode( 'dejure_empires' )]"
					}
					shortcut = "map_mode_11"
				}

				widget ={
					size = {0 4}
				}

				divider_light = {
					min_width = 100
					parentanchor = hcenter
				}
				widget ={
					size = {0 4}
				}
			}
		}
	} # type mini_map_mode = widget {...}
}
