# Using mainly code and icons from Map Modes GUI mod: https://steamcommunity.com/sharedfiles/filedetails/?id=2552358382
types MapModes
{
	type map_modes_debug = flowcontainer {
		ignoreinvisible = yes

		button_round  = {
			visible = "[And( Not(IsGameViewOpen('barbershop')), CanChangeMapMode )]"
			name = "map_mode_simple_realms_button"
			onclick = "[SetMapMode('simple_realms')]"
			raw_text = "Srlm"
			tooltip = "MAPMODE_REALMS"
		}

		button_round  = {
			visible = "[And( Not(IsGameViewOpen('barbershop')), CanChangeMapMode )]"
			name = "map_mode_terrain_button"
			onclick = "[SetMapMode('terrain')]"
			raw_text = "Ter"
			tooltip = "MAPMODE_TERRAIN"
		}

		button_round  = {
			visible = "[And( Not(IsGameViewOpen('barbershop')), CanChangeMapMode )]"
			name = "map_mode_baronies_button"
			onclick = "[SetMapMode('baronies')]"
			raw_text = "Bar"
			tooltip = "MAPMODE_BARONIES"
		}

		button_round  = {
			visible = "[And( Not(IsGameViewOpen('barbershop')), CanChangeMapMode )]"
			name = "map_mode_realm_areas_button"
			onclick = "[SetMapMode('realm_areas')]"
			raw_text = "Area"
			tooltip = "MAPMODE_AREAS"
		}

		button_round  = {
			visible = "[And( Not(IsGameViewOpen('barbershop')), CanChangeMapMode )]"
			name = "map_mode_diplomacy_button"
			onclick = "[SetMapMode('diplomacy')]"
			raw_text = "Diplo"
			tooltip = "MAPMODE_DIPLOMACY"
		}

		button_round  = {
			visible = "[And( Not(IsGameViewOpen('barbershop')), CanChangeMapMode )]"
			onclick = "[SetMapMode('debug_character_pools')]"
			raw_text = "Pools"
			raw_tooltip = "Character Pools"
		}

		button_round  = {
			visible = "[And( Not(IsGameViewOpen('barbershop')), CanChangeMapMode )]"
			onclick = "[SetMapMode('debug_ai_war_coordinator_targets')]"
			raw_text = "AI"
			raw_tooltip = "AI War Coordinator targets"
		}

		button_round  = {
			visible = "[And( Not(IsGameViewOpen('barbershop')), CanChangeMapMode )]"
			onclick = "[SetMapMode('debug_visual_regions')]"
			raw_text = "Reg"
			raw_tooltip = "Visual Geographical Regions"
		}
	}

	type map_modes = widget {
		allow_outside = yes
		filter_mouse = all
		alwaystransparent = yes

		size = { 222 107 }

		background = {
			using = Background_Area_Dark
			margin_left = 5
			margin_bottom = 15
			margin_top = 10
			margin_right = 10
			color = { 0.15 0.15 0.15 0.75 }
		}

		# flowcontainer = {
		# 	visible = "[And( And( Not( GetVariableSystem.Exists( 'mapmodes_expand' ) ), IsMapMode('realms') ), IsDefaultGUIMode )]"
		# 	parentanchor = top|right
		# 	position = { 0 -40 }
		# 	direction = vertical
		# 	ignoreinvisible = yes
		# 	min_width = 170
		# 	tooltip = "ZOOM_LEVEL_PAPER_MAP_TOOLTIP"

		# 	state = {
		# 		name = _show
		# 		using = Animation_FadeIn_Standard
		# 	}

		# 	state = {
		# 		name = _hide
		# 		using = Animation_FadeOut_Standard
		# 	}

		# 	background = {
		# 		using = Background_Area_Dark
		# 		margin = { 10 10 }
		# 		margin_top = 5
		# 		color = { 0.15 0.15 0.15 0.75 }
		# 	}

		# 	text_single = {
		# 		visible = "[GreaterThanOrEqualTo_int32(GetZoomLevel, '(int32)20')]"
		# 		parentanchor = hcenter
		# 		text = "ZOOM_LEVEL_PAPER_MAP"
		# 		default_format = "#high;italic"
		# 	}

		# 	text_single = {
		# 		visible = "[GreaterThanOrEqualTo_int32(GetZoomLevel, '(int32)20')]"
		# 		parentanchor = hcenter
		# 		text = "ZOOM_LEVEL_SELECTING_REALMS"
		# 	}
		# }

		# flowcontainer = {
		# 	visible = "[And( And( Not( GetVariableSystem.Exists( 'mapmodes_expand' ) ), IsMapMode('realms') ), IsDefaultGUIMode )]"
		# 	parentanchor = top|right
		# 	position = { 0 -40 }
		# 	direction = vertical
		# 	ignoreinvisible = yes
		# 	min_width = 170
		# 	tooltip = ZOOM_LEVEL_POLITICAL_TOOLTIP

		# 	state = {
		# 		name = _show
		# 		using = Animation_FadeIn_Standard
		# 	}

		# 	state = {
		# 		name = _hide
		# 		using = Animation_FadeOut_Standard
		# 	}

		# 	background = {
		# 		using = Background_Area_Dark
		# 		margin = { 10 10 }
		# 		margin_top = 5
		# 		color = { 0.15 0.15 0.15 0.75 }
		# 	}

		# 	text_single = {
		# 		visible = "[And(LessThan_int32(GetZoomLevel, '(int32)20'), GreaterThan_int32(GetZoomLevel, '(int32)8'))]"
		# 		parentanchor = hcenter
		# 		text = "ZOOM_LEVEL_POLITICAL"
		# 		default_format = "#color_yellow"
		# 	}

		# 	text_single = {
		# 		visible = "[And(LessThan_int32(GetZoomLevel, '(int32)20'), GreaterThan_int32(GetZoomLevel, '(int32)8'))]"
		# 		parentanchor = hcenter
		# 		text = "ZOOM_LEVEL_SELECTING_REALMS"
		# 	}
		# }

		# flowcontainer = {
		# 	visible = "[And( And(Not(GetVariableSystem.Exists( 'mapmodes_expand' )), IsMapMode('realms')), IsDefaultGUIMode )]"
		# 	parentanchor = top|right
		# 	position = { 0 -40 }
		# 	direction = vertical
		# 	ignoreinvisible = yes
		# 	min_width = 170
		# 	tooltip = ZOOM_LEVEL_DETAILS_TOOLTIP

		# 	state = {
		# 		name = _show
		# 		using = Animation_FadeIn_Standard
		# 	}

		# 	state = {
		# 		name = _hide
		# 		using = Animation_FadeOut_Standard
		# 	}

		# 	background = {
		# 		using = Background_Area_Dark
		# 		margin = { 10 10 }
		# 		margin_top = 5
		# 		color = { 0.15 0.15 0.15 0.75 }
		# 	}

		# 	text_single = {
		# 		visible = "[LessThan_int32(GetZoomLevel, '(int32)9')]"
		# 		parentanchor = hcenter
		# 		text = "ZOOM_LEVEL_DETAILS"
		# 		default_format = "#color_green"
		# 	}

		# 	text_single = {
		# 		visible = "[LessThan_int32(GetZoomLevel, '(int32)9')]"
		# 		parentanchor = hcenter
		# 		text = "ZOOM_LEVEL_SELECTING_BARONIES"
		# 	}
		# }

		flowcontainer = {
			parentanchor = right|bottom
			margin_right = 15
			direction = vertical

			## De Jure
			flowcontainer = {
				visible = "[CanChangeMapMode]"
				parentanchor = hcenter
				direction = horizontal
				ignoreinvisible = yes
				spacing = -3

				icon_button_mapmode = {
					name = "map_mode_realms_button"
					size = { 36 36 }

					blockoverride 'mm_datacontext'
					{
						datacontext = "[GetMapMode('realms')]"
					}

					blockoverride "mm_button"
					{
						shortcut = "map_mode_1"
					}

					blockoverride "button_bg_color"
					{
						color = { 0.1 0.14 0.1 1 }
					}
				}
				
				icon_button_mapmode = {
					name = "map_mode_counties_button"
					size = { 36 36 }

					blockoverride "mm_button"
					{
						onclick = "[SetMapMode('dejure_counties')]"
						down = "[IsMapMode('dejure_counties')]"
						shortcut = "map_mode_6"
						tooltip = "MAPMODE_COUNTY_TITLES_TOOLTIP"
					}
					blockoverride "mm_icon"
					{
						down = "[IsMapMode('dejure_counties')]"
						texture = "gfx/interface/icons/flat_icons/mapmode_county.dds"
					}

					blockoverride "mm_glow"
					{
						visible = "[IsMapMode('dejure_counties')]"
					}
				}

				icon_button_mapmode = {
					name = "map_mode_duchies_button"
					size = { 36 36 }

					blockoverride 'mm_datacontext'
					{
						datacontext = "[GetMapMode('dejure_duchies')]"
					}

					blockoverride "mm_button"
					{
						shortcut = "map_mode_9"
					}

					blockoverride "button_bg_color"
					{
						color = { 0.1 0.14 0.1 1 }
					}
				}

				icon_button_mapmode = {
					name = "map_mode_kingdoms_button"
					size = { 36 36 }

					blockoverride 'mm_datacontext'
					{
						datacontext = "[GetMapMode('dejure_kingdoms')]"
					}

					blockoverride "mm_button"
					{
						shortcut = "map_mode_10"
					}

					blockoverride "button_bg_color"
					{
						color = { 0.18 0.1 0.1 1 }
					}
				}

				icon_button_mapmode = {
					name = "map_mode_empires_button"
					size = { 36 36 }

					blockoverride 'mm_datacontext'
					{
						datacontext = "[GetMapMode('dejure_empires')]"
					}

					blockoverride "mm_button"
					{
						shortcut = "map_mode_11"
					}

					blockoverride "button_bg_color"
					{
						color = { 0.12 0.12 0.18 1 }
					}
				}

				icon_button_mapmode = {
					name = "simple_terrain"
					size = { 36 36 }

					blockoverride "mm_button"
					{
						onclick = "[SetMapMode('simple_terrain')]"
						down = "[IsMapMode('simple_terrain')]"
						shortcut = "map_mode_12"
						tooltip = "MAPMODE_TERRAIN_TOOLTIP"
					}
					blockoverride "mm_icon"
					{
						down = "[IsMapMode('simple_terrain')]"
						texture = "gfx/interface/icons/flat_icons/mapmode_terrain.dds"
					}

					blockoverride "mm_glow"
					{
						visible = "[IsMapMode('simple_terrain')]"
					}
				}

			}

			## Middle Row
			flowcontainer = {
				parentanchor = hcenter
				direction = horizontal
				ignoreinvisible = no
				spacing = -2

				visible = "[CanChangeMapMode]"

				icon_button_mapmode = {
					name = "map_mode_infra_button"
					size = { 36 36 }

					blockoverride "mm_button"
					{
						onclick = "[SetMapMode('infra')]"
						onclick = "[GetScriptedGui('line_infra_map').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
						down = "[And( GetScriptedGui('line_infra_map').IsShown(GuiScope.End), IsMapMode('infra') )]"
						enabled = "[And(Not(IsObserver), GetScriptedGui('line_infra_map').IsValid(GuiScope.End))]"
						tooltip = "MAPMODE_INFRA_TOOLTIP"
					}
					blockoverride "mm_icon"
					{
						down = "[IsMapMode('infra')]"
						texture = "gfx/interface/icons/flat_icons/mapmode_warring.dds"
					}

					blockoverride "mm_glow"
					{
						visible = "[IsMapMode('infra')]"
					}
				}
				
				icon_button_mapmode = {
					name = "map_mode_population_target_button"
					size = { 36 36 }

					blockoverride "mm_button"
					{
						onclick = "[SetMapMode('population_target')]"
						onclick = "[GetScriptedGui('line_population_target_map').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
						down = "[And( GetScriptedGui('line_population_target_map').IsShown(GuiScope.End), IsMapMode('population_target') )]"
						enabled = "[And(Not(IsObserver), GetScriptedGui('line_population_target_map').IsValid(GuiScope.End))]"
						tooltip = "MAPMODE_POPULATION_TARGET_TOOLTIP"
					}
					blockoverride "mm_icon"
					{
						down = "[IsMapMode('population_target')]"
						texture = "gfx/interface/icons/flat_icons/mapmode_raiding.dds"
					}

					blockoverride "mm_glow"
					{
						visible = "[IsMapMode('population_target')]"
					}
				}

				icon_button_mapmode = {
					name = "map_mode_fortification_button"
					size = { 36 36 }

					blockoverride "mm_button"
					{
						onclick = "[SetMapMode('fortification')]"
						onclick = "[GetScriptedGui('line_fortification_map').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
						down = "[And( GetScriptedGui('line_fortification_map').IsShown(GuiScope.End), IsMapMode('fortification') )]"
						enabled = "[And(Not(IsObserver), GetScriptedGui('line_fortification_map').IsValid(GuiScope.End))]"
						tooltip = "MAPMODE_FORTIFICATION_TOOLTIP"
					}
					blockoverride "mm_icon"
					{
						down = "[IsMapMode('fortification')]"
						texture = "gfx/interface/icons/flat_icons/mapmode_fortification.dds"
					}

					blockoverride "mm_glow"
					{
						visible = "[IsMapMode('fortification')]"
					}
				}
				
				icon_button_mapmode = {
					name = "map_mode_artifact_map_button"
					size = { 36 36 }

					blockoverride "mm_button"
					{
						onclick = "[SetMapMode('artifact')]"
						onclick = "[GetScriptedGui('line_artifact_map').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
						down = "[And( GetScriptedGui('line_artifact_map').IsShown(GuiScope.End), IsMapMode('artifact') )]"
						enabled = "[And(Not(IsObserver), GetScriptedGui('line_artifact_map').IsValid(GuiScope.End))]"
						tooltip = "MAPMODE_ARTIFACT_TOOLTIP"
					}
					blockoverride "mm_icon"
					{
						down = "[IsMapMode('artifact')]"
						texture = "gfx/interface/icons/flat_icons/mapmode_artifact.dds"
					}

					blockoverride "mm_glow"
					{
						visible = "[IsMapMode('artifact')]"
					}
				}

				icon_button_mapmode = {
					name = "map_mode_county_control_button"
					size = { 36 36 }

					blockoverride "mm_button"
					{
						onclick = "[SetMapMode('county_control')]"
						down = "[IsMapMode('county_control')]"
						shortcut = "map_mode_7"
						tooltip = "MAPMODE_COUNTY_CONTROL"
					}
					blockoverride "mm_icon"
					{
						down = "[IsMapMode('county_control')]"
						texture = "gfx/interface/icons/flat_icons/mapmode_county_control.dds"
					}

					blockoverride "mm_glow"
					{
						visible = "[IsMapMode('county_control')]"
					}
				}
				
				icon_button_mapmode = {
					name = "map_mode_weather_button"
					size = { 36 36 }
					#visible = "[GetGlobalVariable('custom_map_mode').IsSet]" ## To-Do:: Use Silk Road's weather map's updates

					blockoverride "mm_button"
					{
						onclick = "[SetMapMode('weather')]"
						onclick = "[GetScriptedGui('line_weather_map').Execute(GuiScope.End)]"
						down = "[And( GetScriptedGui('line_weather_map').IsShown(GuiScope.End), IsMapMode('weather') )]"
						enabled = "[And(Not(IsObserver), GetScriptedGui('line_weather_map').IsValid(GuiScope.End))]"
						tooltip = "MAPMODE_WEATHER_TOOLTIP"
					}
					blockoverride "mm_icon"
					{
						down = "[IsMapMode('weather')]"
						texture = "gfx/interface/icons/flat_icons/mapmode_weather.dds"
					}

					blockoverride "mm_glow"
					{
						visible = "[IsMapMode('weather')]"
					}
				}
			}

			## Lower Row
			flowcontainer = {
				parentanchor = hcenter
				direction = horizontal
				ignoreinvisible = no
				spacing = -2

				visible = "[CanChangeMapMode]"

				icon_button_mapmode = {
					name = "county_development"
					size = { 36 36 }

					blockoverride "mm_button"
					{
						onclick = "[SetMapMode('county_development')]"
						down = "[IsMapMode('county_development')]"
						shortcut = "map_mode_13"
						tooltip = "MAPMODE_DEVELOPMENT_TOOLTIP"
					}
					blockoverride "mm_icon"
					{
						down = "[IsMapMode('county_development')]"
						texture = "gfx/interface/icons/flat_icons/mapmode_population.dds"
					}

					blockoverride "mm_glow"
					{
						visible = "[IsMapMode('county_development')]"
					}
				}

				icon_button_mapmode = {
					name = "economy_buildings"
					size = { 36 36 }

					blockoverride "mm_button"
					{
						onclick = "[SetMapMode('economy_buildings')]"
						down = "[IsMapMode('economy_buildings')]"
						shortcut = "map_mode_14"
						tooltip = "MAPMODE_ECONOMY_BUILDINGS"
					}
					blockoverride "mm_icon"
					{
						down = "[IsMapMode('economy_buildings')]"
						texture = "gfx/interface/icons/flat_icons/mapmode_development.dds"
					}

					blockoverride "mm_glow"
					{
						visible = "[IsMapMode('economy_buildings')]"
					}
				}

				icon_button_mapmode = {
					name = "map_mode_religion_button"
					size = { 36 36 }
					parentanchor = vcenter

					blockoverride 'mm_datacontext'
					{
						datacontext = "[GetMapMode('religions')]"
					}

					blockoverride "mm_button"
					{
						shortcut = "map_mode_3"
					}
				}

				icon_button_mapmode = {
					name = "map_mode_cultures_button"
					size = { 36 36 }
					parentanchor = vcenter

					blockoverride 'mm_datacontext'
					{
						datacontext = "[GetMapMode('cultures')]"
					}

					blockoverride "mm_button"
					{
						shortcut = "map_mode_2"
					}
				}

				icon_button_mapmode = {
					name = "map_mode_court_languages_button"
					size = { 36 36 }

					blockoverride "mm_button"
					{
						onclick = "[SetMapMode('court_languages')]"
						down = "[IsMapMode('court_languages')]"
						shortcut = "map_mode_7"
						tooltip = "MAPMODE_COURT_LANGUAGES"
					}
					blockoverride "mm_icon"
					{
						down = "[IsMapMode('court_languages')]"
						texture = "gfx/interface/icons/flat_icons/mapmode_languages.dds"
					}

					blockoverride "mm_glow"
					{
						visible = "[IsMapMode('court_languages')]"
					}
				}

				widget = {
					parentanchor = vcenter
					size = {32 32}

					button_round = {
						parentanchor = center
						size = { 30 30 }
						onclick = "[GetVariableSystem.Toggle( 'mapmodes_expand' )]"

						button_plus_small = {
							parentanchor = center
							alwaystransparent = yes
						}
					}
				}
			}
		}

		flowcontainer_additional_mapmodes = {
			parentanchor = top|right
			widgetanchor = bottom|right
			position = { 20 21 } 
		}

	} # type map_modes = widget {...}

	type mm_text_button = button_tertiary {
		name = "players"
		block 'datacontext'
		{
			datacontext = "[GetMapMode( 'realms' )]"
		}
		block 'visible'
		{
			visible = "[CanChangeMapMode]"
		}

		parentanchor = hcenter
		size = { 159 25 }

		onclick = "[SetMapMode( MapMode.GetKey )]"
		alwaystransparent = "[IsMapMode( MapMode.GetKey )]"
		
		text = "[MapMode.GetName]"
		tooltip = "[MapMode.GetDesc]"

		using = tooltip_ws

		button_expand = {
			visible = "[IsMapMode( MapMode.GetKey )]"

			size = { 15	15 }
			parentanchor = left|vcenter

			alwaystransparent = yes
		}

		button_expand = {
			visible = "[IsMapMode( MapMode.GetKey )]"
			mirror = horizontal

			size = { 15	15 }
			parentanchor = right|vcenter

			alwaystransparent = yes
		}
	}

	type flowcontainer_additional_mapmodes = flowcontainer {

		visible = "[GetVariableSystem.Exists( 'mapmodes_expand' )]"
		visible_at_creation = no

		margin = { 22 25 }
		alwaystransparent = no
		filter_mouse = all

		state = {
			name = _mouse_hierarchy_leave
			on_finish = "[GetVariableSystem.Toggle( 'mapmodes_expand' )]"
		}

		state = {
			name = _show
			using = Animation_FadeIn_Quick
		}

		state = {
			name = _hide
			using = Animation_FadeOut_Standard
		}

		flowcontainer = {
			direction = vertical
			margin = { 10 5 }
			ignoreinvisible = yes

			background = {
				using = Background_Area_Dark
			}

			text_single = {
				parentanchor = hcenter
				text = "ADDITIONAL_MAPMODES"
				default_format = "#medium"
				margin_bottom = 5
				max_width = 110
			}

			block "mapmodes_insert_before"
			{
					
			}

			mm_text_button = {
				name = "players"
				blockoverride 'datacontext'
				{
					datacontext = "[GetMapMode( 'players' )]"
				}
				blockoverride 'visible'
				{
					visible = "[And( Or(GameHasMultiplePlayers, InDebugMode), CanChangeMapMode)]"
				}
				shortcut = "map_mode_8"
			}

			mm_text_button = {
				name = "map_mode_government_button"
				blockoverride 'datacontext'
				{
					datacontext = "[GetMapMode( 'government' )]"
				}
				shortcut = "map_mode_5"
			}

			button_tertiary = {
				name = "map_mode_diplomacy_button"
				visible = "[And( Not(IsGameViewOpen('barbershop')), CanChangeMapMode )]"
				parentanchor = hcenter

				size = { 159 25 }
				onclick = "[SetMapMode('diplomacy')]"
				down = "[IsMapMode('diplomacy')]"

				text = "MAPMODE_DIPLOMATIC_RANGE"

				shortcut = "map_mode_7"
				tooltip = "MAPMODE_DIPLOMATIC_RANGE_TOOLTIP"
				using = tooltip_ws
			}


			widget ={
				size = {0 4}
			}

			divider_light = {
				min_width = 100
				parentanchor = hcenter
			}
			widget ={
				size = {0 4}
			}

			button_tertiary = {
				name = "map_mode_county_opinion_button"
				visible = "[And( Not(IsGameViewOpen('barbershop')), CanChangeMapMode )]"
				parentanchor = hcenter

				size = { 159 25 }
				onclick = "[SetMapMode('county_opinion')]"
				onclick = "[GetScriptedGui('line_county_opinion_map').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
				down = "[And( GetScriptedGui('line_county_opinion_map').IsShown(GuiScope.End), IsMapMode('county_opinion') )]"
				enabled = "[And(Not(IsObserver), GetScriptedGui('line_county_opinion_map').IsValid(GuiScope.End))]"

				text = "MAPMODE_COUNTY_OPINION_HEADER"

				tooltip = "MAPMODE_COUNTY_OPINION_TOOLTIP"
				using = tooltip_ws
			}
			
			button_tertiary = {
				name = "line_stationed_map"
				visible = "[And( Not(IsGameViewOpen('barbershop')), CanChangeMapMode )]"
				parentanchor = hcenter

				size = { 159 25 }
				onclick = "[SetMapMode('stationed')]"
				onclick = "[GetScriptedGui('line_stationed_map').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
				down = "[And( GetScriptedGui('line_stationed_map').IsShown(GuiScope.End), IsMapMode('stationed') )]"
				enabled = "[And(Not(IsObserver), GetScriptedGui('line_stationed_map').IsValid(GuiScope.End))]"

				text = "MAPMODE_STATIONED_HEADER"

				tooltip = "MAPMODE_STATIONED_TOOLTIP"
				using = tooltip_ws
			}

			button_tertiary = {
				name = "line_alliance_map"
				visible = "[And( Not(IsGameViewOpen('barbershop')), CanChangeMapMode )]"
				parentanchor = hcenter

				size = { 159 25 }
				onclick = "[SetMapMode('alliance')]"
				onclick = "[GetScriptedGui('line_alliance_map').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
				down = "[And( GetScriptedGui('line_alliance_map').IsShown(GuiScope.End), IsMapMode('alliance') )]"
				enabled = "[And(Not(IsObserver), GetScriptedGui('line_alliance_map').IsValid(GuiScope.End))]"

				text = "MAPMODE_ALLIANCE_HEADER"

				tooltip = "MAPMODE_ALLIANCE_TOOLTIP"
				using = tooltip_ws
			}

			button_tertiary = {
				name = "map_mode_military_strength_button"
				visible = "[And( Not(IsGameViewOpen('barbershop')), CanChangeMapMode )]"
				parentanchor = hcenter

				size = { 159 25 }
				onclick = "[SetMapMode('military_strength_mode')]"
				onclick = "[GetScriptedGui('line_military_strength_map').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
				down = "[And( GetScriptedGui('line_military_strength_map').IsShown(GuiScope.End), IsMapMode('military_strength_mode') )]"
				enabled = "[And(Not(IsObserver), GetScriptedGui('line_military_strength_map').IsValid(GuiScope.End))]"

				text = "MAPMODE_MILITARY_STRENGTH_HEADER"

				tooltip = "MAPMODE_MILITARY_STRENGTH_TOOLTIP"
				using = tooltip_ws
			}

			widget ={
				size = {0 4}
			}

			divider_light = {
				min_width = 100
				parentanchor = hcenter
			}
			widget ={
				size = {0 4}
			}

			mm_text_button = {
				name = "map_mode_houses_button"
				blockoverride 'datacontext'
				{
					datacontext = "[GetMapMode( 'houses' )]"
				}
				text = "MAPMODE_HOUSES_HEADER"
				shortcut = "map_mode_4"
			}
		
			button_tertiary = {
				name = "line_dynastylineage_map"
				visible = "[And(And( Not(IsGameViewOpen('barbershop')), CanChangeMapMode ),GetGlobalVariable('dynastylineages').IsSet)]"
				parentanchor = hcenter

				size = { 159 25 }
				onclick = "[SetMapMode('line_dynasty')]"
				onclick = "[GetScriptedGui('line_dynasty_map').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
				down = "[And( GetScriptedGui('line_dynasty_map').IsShown(GuiScope.End), IsMapMode('line_dynasty') )]"
				enabled = "[And(Not(IsObserver), GetScriptedGui('line_dynasty_map').IsValid(GuiScope.End))]"

				text = "MAPMODE_DYNASTY_LINE_HEADER"

				tooltip = "MAPMODE_DYNASTY_LINE_TOOLTIP"
				using = tooltip_ws
			}

			button_tertiary = {
				name = "line_patrilineage_map"
				visible = "[And(And( Not(IsGameViewOpen('barbershop')), CanChangeMapMode ),GetGlobalVariable('patrilineages').IsSet)]"
				parentanchor = hcenter

				size = { 159 25 }
				onclick = "[SetMapMode('line_patrilineage')]"
				onclick = "[GetScriptedGui('line_patrilineage_map').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
				down = "[And( GetScriptedGui('line_patrilineage_map').IsShown(GuiScope.End), IsMapMode('line_patrilineage') )]"
				enabled = "[And(Not(IsObserver), GetScriptedGui('line_patrilineage_map').IsValid(GuiScope.End))]"

				text = "MAPMODE_PATRILINEAGE_HEADER"

				tooltip = "MAPMODE_PATRILINEAGE_TOOLTIP"
				using = tooltip_ws
			}

			button_tertiary = {
				name = "line_matrilineage_map"
				visible = "[And(And( Not(IsGameViewOpen('barbershop')), CanChangeMapMode ),GetGlobalVariable('matrilineages').IsSet)]"
				parentanchor = hcenter

				size = { 159 25 }
				onclick = "[SetMapMode('line_matrilineage')]"
				onclick = "[GetScriptedGui('line_matrilineage_map').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
				down = "[And( GetScriptedGui('line_matrilineage_map').IsShown(GuiScope.End), IsMapMode('line_matrilineage') )]"
				enabled = "[And(Not(IsObserver), GetScriptedGui('line_matrilineage_map').IsValid(GuiScope.End))]"

				text = "MAPMODE_MATRILINEAGE_HEADER"

				tooltip = "MAPMODE_MATRILINEAGE_TOOLTIP"
				using = tooltip_ws
			}
		
			button_tertiary = {
				name = "line_goodlineage_map"
				visible = "[And(And( Not(IsGameViewOpen('barbershop')), CanChangeMapMode ),GetGlobalVariable('goodlineages').IsSet)]"
				parentanchor = hcenter

				size = { 159 25 }
				onclick = "[SetMapMode('line_dynasty')]"
				onclick = "[GetScriptedGui('line_good_lineage_map').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
				down = "[And( GetScriptedGui('line_good_lineage_map').IsShown(GuiScope.End), IsMapMode('line_dynasty') )]"
				enabled = "[And(Not(IsObserver), GetScriptedGui('line_good_lineage_map').IsValid(GuiScope.End))]"

				text = "MAPMODE_GOOD_DYNASTY_HEADER"

				tooltip = "MAPMODE_GOOD_DYNASTY_TOOLTIP"
				using = tooltip_ws
			}
			
			button_tertiary = {
				name = "line_badlineage_map"
				visible = "[And(And( Not(IsGameViewOpen('barbershop')), CanChangeMapMode ),GetGlobalVariable('badlineages').IsSet)]"
				parentanchor = hcenter

				size = { 159 25 }
				onclick = "[SetMapMode('line_dynasty')]"
				onclick = "[GetScriptedGui('line_bad_lineage_map').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
				down = "[And( GetScriptedGui('line_bad_lineage_map').IsShown(GuiScope.End), IsMapMode('line_dynasty') )]"
				enabled = "[And(Not(IsObserver), GetScriptedGui('line_bad_lineage_map').IsValid(GuiScope.End))]"

				text = "MAPMODE_BAD_DYNASTY_HEADER"

				tooltip = "MAPMODE_BAD_DYNASTY_TOOLTIP"
				using = tooltip_ws
			}

			button_tertiary = {
				name = "line_family_map"
				visible = "[And(And( Not(IsGameViewOpen('barbershop')), CanChangeMapMode ),GetGlobalVariable('familymarks').IsSet)]"
				parentanchor = hcenter

				size = { 159 25 }
				onclick = "[SetMapMode('line_family')]"
				onclick = "[GetScriptedGui('line_family_map').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
				down = "[And( GetScriptedGui('line_family_map').IsShown(GuiScope.End), IsMapMode('line_family') )]"
				enabled = "[And(Not(IsObserver), GetScriptedGui('line_family_map').IsValid(GuiScope.End))]"

				text = "MAPMODE_FAMILY_HEADER"

				tooltip = "MAPMODE_FAMILY_TOOLTIP"
				using = tooltip_ws
			}

			widget ={
				size = {0 4}
			}

			divider_light = {
				min_width = 100
				parentanchor = hcenter
			}
			widget ={
				size = {0 4}
			}

			button_tertiary = {
				name = "minorities_map"
				visible = "[And(And( Not(IsGameViewOpen('barbershop')), CanChangeMapMode ),GetGlobalVariable('sea_minority_is_active').IsSet)]"
				parentanchor = hcenter

				size = { 159 25 }
				onclick = "[SetMapMode('debug_character_pools')]"
				onclick = "[GetScriptedGui('minorities_map').Execute(GuiScope.End)]"
				down = "[And( GetScriptedGui('minorities_map').IsShown(GuiScope.End), IsMapMode('debug_character_pools') )]"
				enabled = "[And(Not(IsObserver), GetScriptedGui('minorities_map').IsValid(GuiScope.End))]"

				text = "MAPMODE_MINORITIES_HEADER"

				tooltip = "MAPMODE_MINORITIES_TOOLTIP"
				using = tooltip_ws
			}
			
			button_tertiary = {
				name = "custom_tributaries_map"
				visible = "[And(And( Not(IsGameViewOpen('barbershop')), CanChangeMapMode ),GetGlobalVariable('TTF_is_loaded').IsSet)]"
				parentanchor = hcenter

				size = { 159 25 }
				onclick = "[SetMapMode('tributaries')]"
				onclick = "[GetScriptedGui('custom_tributary_map').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
				down = "[And( GetScriptedGui('custom_tributary_map').IsShown(GuiScope.End), IsMapMode('tributaries') )]"
				enabled = "[And(Not(IsObserver), GetScriptedGui('custom_tributary_map').IsValid(GuiScope.End))]"

				text = "MAPMODE_TRIBUTARY_HEADER"

				tooltip = "MAPMODE_TRIBUTARY_TOOLTIP"
				using = tooltip_ws
			}

			button_tertiary = {
				name = "siro_trade_map"
				visible = "[And(And( Not(IsGameViewOpen('barbershop')), CanChangeMapMode ),GetGlobalVariable('custom_map_mode').IsSet)]"
				parentanchor = hcenter

				size = { 159 25 }
				onclick = "[SetMapMode('silk_road')]"
				onclick = "[GetScriptedGui('siro_trade_map').Execute(GuiScope.SetRoot(GetPlayer.MakeScope).End)]"
				down = "[And( GetScriptedGui('siro_trade_map').IsShown(GuiScope.End), IsMapMode('silk_road') )]"
				enabled = "[And(Not(IsObserver), GetScriptedGui('siro_trade_map').IsValid(GuiScope.End))]"

				text = "SIRO_TRADE_MAP"

				tooltip = "SIRO_TRADE_MAP_TOOLTIP"
				using = tooltip_ws
			}
			
		}
	}

	type mini_map_mode = widget {
		allow_outside = yes
		filter_mouse = all
		alwaystransparent = yes

		size = { 320 60 }

		background = {
			using = Background_Area_Dark
			margin = { 10 0 }
			color = { 0.15 0.15 0.15 0.75 }
		}

		hbox = {
			vbox = {
				layoutpolicy_horizontal = expanding
				text_single = {
					text = MAP_MODE
				}
				text_single = {
					text = "[GetCurrentMapMode.GetName]"
					default_format = "#high"
				}
			}

			expand = {}

			icon_button_mapmode = {
				blockoverride 'mm_datacontext'
				{
					datacontext = "[GetMapMode( 'struggle' )]"
				}
			}

			icon_button_mapmode = {
				blockoverride 'mm_datacontext'
				{
					datacontext = "[GetMapMode( 'realms' )]"
				}
			}

			icon_button_mapmode = {
				blockoverride 'mm_datacontext'
				{
					datacontext = "[GetMapMode( 'religions' )]"
				}
			}

			icon_button_mapmode = {
				blockoverride 'mm_datacontext'
				{
					datacontext = "[GetMapMode( 'cultures' )]"
				}
			}

			widget = {
				size = {32 32}

				button_round = {
					size = { 30 30 }
					parentanchor = top|hcenter
					widgetanchor = center
					position = { 0 10 }

					onclick = "[GetVariableSystem.Toggle( 'mapmodes_expand' )]"

					button_plus_small = {
						parentanchor = center
						alwaystransparent = yes
					}
				}
			}
		}

		flowcontainer_additional_mapmodes = {
			parentanchor = top|right
			widgetanchor = bottom|right
			position = { 31 10 } 

			blockoverride "mapmodes_insert_before"
			{
				mm_text_button = {
					name = "map_mode_dejure_duchies_button"
					blockoverride 'datacontext'
					{
						datacontext = "[GetMapMode( 'dejure_duchies' )]"
					}
					shortcut = "map_mode_9"
				}

				mm_text_button = {
					name = "map_mode_dejure_kingdoms_button"
					blockoverride 'datacontext'
					{
						datacontext = "[GetMapMode( 'dejure_kingdoms' )]"
					}
					shortcut = "map_mode_10"
				}

				mm_text_button = {
					name = "map_mode_dejure_empires_button"
					blockoverride 'datacontext'
					{
						datacontext = "[GetMapMode( 'dejure_empires' )]"
					}
					shortcut = "map_mode_11"
				}

				widget ={
					size = {0 4}
				}

				divider_light = {
					min_width = 100
					parentanchor = hcenter
				}
				widget ={
					size = {0 4}
				}
			}
		}
	} # type mini_map_mode = widget {...}
}
